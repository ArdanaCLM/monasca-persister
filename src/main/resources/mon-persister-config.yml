name: mon-persister

#Kafka settings.
kafkaConfiguration:
# See http://kafka.apache.org/documentation.html#api for semantics and defaults.
  topic: metrics
  numThreads: 1
  groupId: 1
  zookeeperConnect: localhost:2181
  consumerId: 1
  socketTimeoutMs: 30000
  socketReceiveBufferBytes : 65536
  fetchMessageMaxBytes: 1048576
  autoCommitEnable: true
  autoCommitIntervalMs: 60000
  queuedMaxMessageChunks: 10
  rebalanceMaxRetries: 4
  fetchMinBytes:  1
  fetchWaitMaxMs:  100
  rebalanceBackoffMs: 2000
  refreshLeaderBackoffMs: 200
  autoOffsetReset: largest
  consumerTimeoutMs:  -1
  clientId : 1
  zookeeperSessionTimeoutMs : 60000
  zookeeperConnectionTimeoutMs : 6000
  zookeeperSyncTimeMs: 2000

disruptorConfiguration:
  bufferSize:  1048576
  numProcessors: 1

verticaOutputProcessorConfiguration:
  batchSize: 25000

monDeDuperConfiguration:
  dedupeRunFrequencySeconds: 30

verticaMetricRepositoryConfiguration:
  maxCacheSize: 2000000

dataSourceFactory:
  driverClass: com.vertica.jdbc.Driver
#  url: jdbc:vertica://mon-aw1rdd1-vertica0001.rndd.aw1.hpcloud.net:5433/som
  url: jdbc:vertica://15.185.94.245:5433/som
#  user: persister
  user: mon_persister
#  user: dbadmin
  password: password
  properties:
      ssl: false
  # the maximum amount of time to wait on an empty pool before throwing an exception
  maxWaitForConnection: 1s

  # the SQL query to run when validating a connection's liveness
  validationQuery: "/* MyService Health Check */ SELECT 1"

  # the minimum number of connections to keep open
  minSize: 8

  # the maximum number of connections to keep open
  maxSize: 41

  # whether or not idle connections should be validated
  checkConnectionWhileIdle: false

  # the maximum lifetime of an idle connection
  maxConnectionAge: 1 minute

metrics:
  frequency: 1 second

# Logging settings.
logging:

  # The default level of all loggers. Can be OFF, ERROR, WARN, INFO,
  # DEBUG, TRACE, or ALL.
  level: INFO

  # Logger-specific levels.
  loggers:

    # Sets the level for 'com.example.app' to DEBUG.
    com.example.app: DEBUG
    com.hpcloud: debug
#    com.hpcloud.mon.persister.repository: DEBUG

  appenders:
    - type: console
      threshold: INFO
      timeZone: UTC
      target: stdout

    - type: file
      threshold: INFO
      archive: true
      currentLogFilename: ./logs/mon-persister.log
      archivedLogFilenamePattern: ./logs/mon-persister-%d.log.gz
      archivedFileCount: 5

    - type: file
      # The file to which current statements will be logged.
      currentLogFilename: ./logs/mon-persister.log

      # When the log file rotates, the archived log will be renamed to this and gzipped. The
      # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
      # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
      archivedLogFilenamePattern: ./logs/mon-persister-%d.log.gz

      # The number of archived files to keep.
      archivedFileCount: 5

      # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
      timeZone: UTC

